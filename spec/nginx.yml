apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       8080;
          server_name  localhost;
          
          location /health {
            proxy_pass  http://es-entrypoint-0:9200/_cluster/health;
          }
          # location /apm/ {
          #   proxy_pass http://apm-entrypoint:8200/;
          # }
          location / {
            proxy_pass  http://kibana-entrypoint:5601/;
            proxy_redirect off;
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            # rewrite ^/kibana/(.*)$ /$1 break;
          }
          location /internal {
            proxy_pass  http://kibana-entrypoint:5601/internal;
          }
      }
      server {
        listen  8081;
        server_name localhost;
        location /health {
          proxy_pass  http://es-entrypoint-0:9200/_cluster/health;
        }
        location /es/ {
          proxy_pass  http://transform:8080/;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sidecar
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: sidecar
  template:
    metadata:
      labels:
        name: sidecar
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf

---
apiVersion: v1
kind: Service
metadata:
  name: sidecar-entrypoint
spec:
  selector:
    name: sidecar
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: kibana
    - port: 8081
      targetPort: 8081
      protocol: TCP
      name: es
  type: NodePort
